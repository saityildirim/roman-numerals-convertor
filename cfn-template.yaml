AWSTemplateFormatVersion: 2010-09-09

Description: |
  The Roman Numerals Converter Application, converts the given number to the Roman numerals. 
  The application is coded in Python and deployed as a web application with Flask on AWS Elastic Compute Cloud (EC2)
  Instance using AWS Cloudformation and CLI Services.

Parameters:
  myKeyName:
    Description: Select your key pair
    Type: AWS::EC2::KeyPair::KeyName

  imageID:
    Type: "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>"
    Default: "/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-x86_64"

  instanceType:
    Description: Select your instance type.
    Type: String
    Default: t2.micro

Resources:
  myWebServer:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref imageID
      InstanceType: !Ref instanceType
      KeyName: !Ref myKeyName
      SecurityGroupIds:
        - !Ref mySecGrp
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}
      UserData: !Base64 |
        #!/bin/bash
        dnf update -y
        dnf install python3 -y 
        dnf install python3-pip -y
        pip3 install flask==2.3.3

        FOLDER="https://raw.githubusercontent.com/saityildirim/kittens-static-website-ec2/main/static-web"
        cd /var/www/html
        wget ${FOLDER}/index.html
        wget ${FOLDER}/cat0.jpg
        wget ${FOLDER}/cat1.jpg
        wget ${FOLDER}/cat2.jpg
        wget ${FOLDER}/cat3.png
        systemctl start httpd
        systemctl enable httpd

  mySecGrp:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SSH and HTTP # Required
      GroupName: roman-numerals-converter
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0

Outputs:
  webSiteURL:
    Description: URL of website
    Value: !Sub
      - http://${PublicDNS}
      - PublicDNS: !GetAtt myWebServer.PublicDnsName
